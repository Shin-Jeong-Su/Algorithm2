백트래킹이란? 현재상태에서 가능한 모든 후보군을 따라 들어가며 탐색하는 알고리즘.

BT1.cpp
BOJ 15649. N과 M
현재상테에서 가능한 모든 경우의 수를 탐색.
재귀로 구현. 종료조건 필요. 
중복을 없애려면 체크배열을 이욯.

BT2.cpp
첫 시도
4방향 dfs로 풀면 안됨. 왜냐하면 어느 한칸에 퀸을 놓으면 위아래왼쪽오른쪽 4방향은 퀸은 놓을 수가 없기때문에 4방향으로 풀수가 없음. 8방향도 마찬가지.
queen 의 조건에 다 걸리게 되어서 새로 놓을 수가 없기 때문에.

두번째 시도
for문으로 다 돌면서 놓을 수 있으면 리스트에 넣고 놓을 수 있는지는 리스트에 있는 값을 가지고 판별
이중 포문을 돌 때 놓을 수 있다면 그 행을 더이상 보지 않는 것이 문제.
결과적으로 왼쪽에 붙은 피라미드 형식으로 배열이 형성됨.

세번째
한번 놓은 라인은 놓을 수 없다는 것을 이용.
그래서 인덱스를 y로. 인덱스를 참조한 배열의 값을 x로 볼 수 있다.

다음 두 값은 다를 수 있다.
		(abs(i-l)==a[i]-a[l])
		(abs(a[l]-a[i])==l-i)

BT3.cpp
BOJ 15650 N과 M(2)
백트래킹은 현재 상태에서 가능한 모든 후보군을 탐색하는 알고리즘. 보통 재귀로 구현. 원복은 필수.